version: '3.8'

services:
  symfony:
    build: docker/php
    container_name: symfony_websocket
    environment:
      DATABASE_URL: mysql://$MYSQL_USER:$MYSQL_PASSWORD@db/$MYSQL_DATABASE?serverVersion=mariadb-$MYSQL_VERSION
    ports:
      - "8245:80"
    volumes:
      - ./docker/php/conf/nginx.conf:/etc/nginx/http.d/default.conf
      - ./app/symfony:/var/www/symfony
    restart: always

  node:
    container_name: react_websocket
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    restart: always
    volumes:
      - ./app/front:/app/react
      - react_module:/app/react/node_modules
      - ./app/nativeReact:/app/react_native_app
      - native_module:/app/react_native_app/node_modules
    ports:
      - "3000:3000"
      - '19006:19006'
      - '19001:19001'
      - '19000:19000'
      - '19002:19002'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=false

  maildev:
    image: maildev/maildev
    container_name: maildev_websocket
    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    ports:
      - "8081:80"
    restart: always

  db:
    build: docker/bdd
    container_name: mariadb_websocket
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: ${MYSQL_DATABASE:-projectName}
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin_websocket
    restart: always
    depends_on:
      - db
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db

  caddy:
    image: dunglas/mercure
    restart: unless-stopped
    container_name: mercure_websocket
    environment:
      # Uncomment the following line to disable HTTPS
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!pleaseChangeMeNiggaForSecretChat!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!pleaseChangeMeNiggaForSecretChat!'
      MERCURE_EXTRA_DIRECTIVES:
        cors_origins "http://localhost:3000"
        cors_origins "http://localhost:3001"
        cors_origins "http://localhost:8245"
    #                anonymous
    # Uncomment the following line to enable the development mode
    command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
    ports:
      - "9090:80"
      - "443:443"
#        volumes:
#            - caddy_data:/data
#            - caddy_config:/config

volumes:
  db-data:
  react_module:
  native_module:
#    caddy_data:
#    caddy_config: